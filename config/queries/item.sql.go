// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: item.sql

package queries

import (
	"context"
	"time"

	"github.com/lib/pq"
)

const createItem = `-- name: CreateItem :one
INSERT INTO items(user_id, amount, kind, happened_at, tag_ids)
  VALUES ($1, $2, $3, $4, $5)
RETURNING
  id, user_id, amount, tag_ids, kind, happened_at, created_at, updated_at
`

type CreateItemParams struct {
	UserID     int32     `json:"userId"`
	Amount     int32     `json:"amount"`
	Kind       Kind      `json:"kind"`
	HappenedAt time.Time `json:"happenedAt"`
	TagIds     []int32   `json:"tagIds"`
}

func (q *Queries) CreateItem(ctx context.Context, arg CreateItemParams) (Item, error) {
	row := q.db.QueryRowContext(ctx, createItem,
		arg.UserID,
		arg.Amount,
		arg.Kind,
		arg.HappenedAt,
		pq.Array(arg.TagIds),
	)
	var i Item
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Amount,
		pq.Array(&i.TagIds),
		&i.Kind,
		&i.HappenedAt,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
